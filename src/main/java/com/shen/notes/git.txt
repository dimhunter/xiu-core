git 是分布式版本控制系统，解决了集中化的版本控制系统（svn等）中央服务器的单点故障问题。
客户端并不只提取最新版本的文件快照，而是把代码仓库完整地镜像下来。这么一来，任何一处协同工作用的服务器发生故障，
事后都可以用任何一个镜像出来的本地仓库恢复。因为每一次的提取操作，实际上都是一次对代码仓库的完整备份


--------------------------------------
Git基础

	直接记录快照，而非差异比较
	
	近乎所有操作都是本地执行
	
	文件的三种状态
		对于任何一个文件，在 Git 内都只有三种状态：已提交（committed），已修改（modified）和已暂存（staged）。
		
		1.已提交  表示该文件已经被安全地保存在本地数据库中了；
		2.已修改  表示修改了某个文件，但还没有提交保存；
		3.已暂存  表示把已修改的文件放在下次提交时要保存的清单中。
		

		
安装好后，cmd执行命令
	git version		可查看版本
	
	
检出：
	git clone https://github.com/ganshane/lichen
	
	cmd进到某目录去执行，就会检出到该目录。
	
	
	git log 查看提交历史
	git status 查看状态
	git branch -r 查看所有分支。
	
	
假设你创建好了一个项目，并切换到项目的根目录下面：

$ git status   //查看当前项目下所有文的状态，如果第一次，你会发现都红颜色的，因为它还没有交给git/github管理。

$ git add .   //（.）点表示当前目录下的所有内容，交给git管理，也就是提交到了git的本地仓库。
	
	也可以分开单独add某文件  ：git add d.txt f.txt （多个文件用空格隔开）

Ps:git的强大之处就是有一个本地仓库的概念，在没有网络的情况下可以先将更新的内容提交到本地仓库。

$ git commit –m ”new natter ”  //对你更新或修改了哪些内容做一个描述。
	
	也可以分开单独提交某文件：git commit a.txt b.txt -m "同时提交ab" （多个文件用空格隔开。）
	
最后 git push 输入github上的用户名和密码（dimhunter/********）
	
	git config --list 上的name和邮箱可以不是github上的。

==================

提交到仓库

1. 本地建好仓库后，在文件夹下 git init ，初始化成git目录

2. 建立 .gitignore 文件，把忽略规则写进去

3. 添加其余所有的文件到git管理，执行  git add .

4. 提交到本地仓库，git commit -m "初始化提交"

5. push到远程仓库

	执行 git remote add origin https://github.com/dimhunter/guaniu.git
	然后 git push -u origin master
	会提示输入github的用户名和密码 ：dimhunter，laozi**1
	就会push到github上了。

	